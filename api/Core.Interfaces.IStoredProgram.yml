### YamlMime:ManagedReference
items:
- uid: Core.Interfaces.IStoredProgram
  commentId: T:Core.Interfaces.IStoredProgram
  id: IStoredProgram
  parent: Core.Interfaces
  children:
  - Core.Interfaces.IStoredProgram.Execute
  - Core.Interfaces.IStoredProgram.LineIndex
  - Core.Interfaces.IStoredProgram.ResetProgram
  - Core.Interfaces.IStoredProgram.addLine(System.Collections.Generic.List{Core.Token})
  - Core.Interfaces.IStoredProgram.canvas
  - Core.Interfaces.IStoredProgram.tokens
  langs:
  - csharp
  - vb
  name: IStoredProgram
  nameWithType: IStoredProgram
  fullName: Core.Interfaces.IStoredProgram
  type: Interface
  source:
    remote:
      path: BOOSE-Application/Core/Interfaces/IStoredProgram.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: IStoredProgram
    path: ../BOOSE-Application/Core/Interfaces/IStoredProgram.cs
    startLine: 7
  assemblies:
  - Core
  namespace: Core.Interfaces
  summary: Base storedprogram class used to store and execute tokens for a given script
  example: []
  syntax:
    content: public interface IStoredProgram
    content.vb: Public Interface IStoredProgram
- uid: Core.Interfaces.IStoredProgram.LineIndex
  commentId: P:Core.Interfaces.IStoredProgram.LineIndex
  id: LineIndex
  parent: Core.Interfaces.IStoredProgram
  langs:
  - csharp
  - vb
  name: LineIndex
  nameWithType: IStoredProgram.LineIndex
  fullName: Core.Interfaces.IStoredProgram.LineIndex
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Interfaces/IStoredProgram.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: LineIndex
    path: ../BOOSE-Application/Core/Interfaces/IStoredProgram.cs
    startLine: 12
  assemblies:
  - Core
  namespace: Core.Interfaces
  summary: Index for storing which line is being executed at a given time
  example: []
  syntax:
    content: int LineIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property LineIndex As Integer
  overload: Core.Interfaces.IStoredProgram.LineIndex*
- uid: Core.Interfaces.IStoredProgram.canvas
  commentId: P:Core.Interfaces.IStoredProgram.canvas
  id: canvas
  parent: Core.Interfaces.IStoredProgram
  langs:
  - csharp
  - vb
  name: canvas
  nameWithType: IStoredProgram.canvas
  fullName: Core.Interfaces.IStoredProgram.canvas
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Interfaces/IStoredProgram.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: canvas
    path: ../BOOSE-Application/Core/Interfaces/IStoredProgram.cs
    startLine: 16
  assemblies:
  - Core
  namespace: Core.Interfaces
  summary: Canvas used when executing commands to draw
  example: []
  syntax:
    content: ICanvas canvas { get; set; }
    parameters: []
    return:
      type: Core.Interfaces.ICanvas
    content.vb: Property canvas As ICanvas
  overload: Core.Interfaces.IStoredProgram.canvas*
- uid: Core.Interfaces.IStoredProgram.tokens
  commentId: P:Core.Interfaces.IStoredProgram.tokens
  id: tokens
  parent: Core.Interfaces.IStoredProgram
  langs:
  - csharp
  - vb
  name: tokens
  nameWithType: IStoredProgram.tokens
  fullName: Core.Interfaces.IStoredProgram.tokens
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Interfaces/IStoredProgram.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: tokens
    path: ../BOOSE-Application/Core/Interfaces/IStoredProgram.cs
    startLine: 20
  assemblies:
  - Core
  namespace: Core.Interfaces
  summary: The tokens representing the program
  example: []
  syntax:
    content: List<List<Token>> tokens { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{Core.Token}}
    content.vb: Property tokens As List(Of List(Of Token))
  overload: Core.Interfaces.IStoredProgram.tokens*
- uid: Core.Interfaces.IStoredProgram.addLine(System.Collections.Generic.List{Core.Token})
  commentId: M:Core.Interfaces.IStoredProgram.addLine(System.Collections.Generic.List{Core.Token})
  id: addLine(System.Collections.Generic.List{Core.Token})
  parent: Core.Interfaces.IStoredProgram
  langs:
  - csharp
  - vb
  name: addLine(List<Token>)
  nameWithType: IStoredProgram.addLine(List<Token>)
  fullName: Core.Interfaces.IStoredProgram.addLine(System.Collections.Generic.List<Core.Token>)
  type: Method
  source:
    remote:
      path: BOOSE-Application/Core/Interfaces/IStoredProgram.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: addLine
    path: ../BOOSE-Application/Core/Interfaces/IStoredProgram.cs
    startLine: 25
  assemblies:
  - Core
  namespace: Core.Interfaces
  summary: Function for adding a line to the stored program
  example: []
  syntax:
    content: void addLine(List<Token> tokens)
    parameters:
    - id: tokens
      type: System.Collections.Generic.List{Core.Token}
      description: A list of tokens representing the line
    content.vb: Sub addLine(tokens As List(Of Token))
  overload: Core.Interfaces.IStoredProgram.addLine*
  nameWithType.vb: IStoredProgram.addLine(List(Of Token))
  fullName.vb: Core.Interfaces.IStoredProgram.addLine(System.Collections.Generic.List(Of Core.Token))
  name.vb: addLine(List(Of Token))
- uid: Core.Interfaces.IStoredProgram.Execute
  commentId: M:Core.Interfaces.IStoredProgram.Execute
  id: Execute
  parent: Core.Interfaces.IStoredProgram
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: IStoredProgram.Execute()
  fullName: Core.Interfaces.IStoredProgram.Execute()
  type: Method
  source:
    remote:
      path: BOOSE-Application/Core/Interfaces/IStoredProgram.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: Execute
    path: ../BOOSE-Application/Core/Interfaces/IStoredProgram.cs
    startLine: 30
  assemblies:
  - Core
  namespace: Core.Interfaces
  summary: Function to evaluate and execute the stored program
  example: []
  syntax:
    content: CommandResult Execute()
    return:
      type: Core.Enums.CommandResult
      description: ''
    content.vb: Function Execute() As CommandResult
  overload: Core.Interfaces.IStoredProgram.Execute*
- uid: Core.Interfaces.IStoredProgram.ResetProgram
  commentId: M:Core.Interfaces.IStoredProgram.ResetProgram
  id: ResetProgram
  parent: Core.Interfaces.IStoredProgram
  langs:
  - csharp
  - vb
  name: ResetProgram()
  nameWithType: IStoredProgram.ResetProgram()
  fullName: Core.Interfaces.IStoredProgram.ResetProgram()
  type: Method
  source:
    remote:
      path: BOOSE-Application/Core/Interfaces/IStoredProgram.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: ResetProgram
    path: ../BOOSE-Application/Core/Interfaces/IStoredProgram.cs
    startLine: 34
  assemblies:
  - Core
  namespace: Core.Interfaces
  summary: Function for resetting indexes and the last-ran command hash values
  example: []
  syntax:
    content: void ResetProgram()
    content.vb: Sub ResetProgram()
  overload: Core.Interfaces.IStoredProgram.ResetProgram*
references:
- uid: Core.Interfaces
  commentId: N:Core.Interfaces
  href: Core.html
  name: Core.Interfaces
  nameWithType: Core.Interfaces
  fullName: Core.Interfaces
  spec.csharp:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Interfaces
    name: Interfaces
    href: Core.Interfaces.html
  spec.vb:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Interfaces
    name: Interfaces
    href: Core.Interfaces.html
- uid: Core.Interfaces.IStoredProgram.LineIndex*
  commentId: Overload:Core.Interfaces.IStoredProgram.LineIndex
  href: Core.Interfaces.IStoredProgram.html#Core_Interfaces_IStoredProgram_LineIndex
  name: LineIndex
  nameWithType: IStoredProgram.LineIndex
  fullName: Core.Interfaces.IStoredProgram.LineIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Core.Interfaces.IStoredProgram.canvas*
  commentId: Overload:Core.Interfaces.IStoredProgram.canvas
  href: Core.Interfaces.IStoredProgram.html#Core_Interfaces_IStoredProgram_canvas
  name: canvas
  nameWithType: IStoredProgram.canvas
  fullName: Core.Interfaces.IStoredProgram.canvas
- uid: Core.Interfaces.ICanvas
  commentId: T:Core.Interfaces.ICanvas
  parent: Core.Interfaces
  href: Core.Interfaces.ICanvas.html
  name: ICanvas
  nameWithType: ICanvas
  fullName: Core.Interfaces.ICanvas
- uid: Core.Interfaces.IStoredProgram.tokens*
  commentId: Overload:Core.Interfaces.IStoredProgram.tokens
  href: Core.Interfaces.IStoredProgram.html#Core_Interfaces_IStoredProgram_tokens
  name: tokens
  nameWithType: IStoredProgram.tokens
  fullName: Core.Interfaces.IStoredProgram.tokens
- uid: System.Collections.Generic.List{System.Collections.Generic.List{Core.Token}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{Core.Token}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<List<Token>>
  nameWithType: List<List<Token>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<Core.Token>>
  nameWithType.vb: List(Of List(Of Token))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of Core.Token))
  name.vb: List(Of List(Of Token))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Core.Token
    name: Token
    href: Core.Token.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Core.Token
    name: Token
    href: Core.Token.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Core.Interfaces.IStoredProgram.addLine*
  commentId: Overload:Core.Interfaces.IStoredProgram.addLine
  href: Core.Interfaces.IStoredProgram.html#Core_Interfaces_IStoredProgram_addLine_System_Collections_Generic_List_Core_Token__
  name: addLine
  nameWithType: IStoredProgram.addLine
  fullName: Core.Interfaces.IStoredProgram.addLine
- uid: System.Collections.Generic.List{Core.Token}
  commentId: T:System.Collections.Generic.List{Core.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Token>
  nameWithType: List<Token>
  fullName: System.Collections.Generic.List<Core.Token>
  nameWithType.vb: List(Of Token)
  fullName.vb: System.Collections.Generic.List(Of Core.Token)
  name.vb: List(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Core.Token
    name: Token
    href: Core.Token.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Core.Token
    name: Token
    href: Core.Token.html
  - name: )
- uid: Core.Interfaces.IStoredProgram.Execute*
  commentId: Overload:Core.Interfaces.IStoredProgram.Execute
  href: Core.Interfaces.IStoredProgram.html#Core_Interfaces_IStoredProgram_Execute
  name: Execute
  nameWithType: IStoredProgram.Execute
  fullName: Core.Interfaces.IStoredProgram.Execute
- uid: Core.Enums.CommandResult
  commentId: T:Core.Enums.CommandResult
  parent: Core.Enums
  href: Core.Enums.CommandResult.html
  name: CommandResult
  nameWithType: CommandResult
  fullName: Core.Enums.CommandResult
- uid: Core.Enums
  commentId: N:Core.Enums
  href: Core.html
  name: Core.Enums
  nameWithType: Core.Enums
  fullName: Core.Enums
  spec.csharp:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Enums
    name: Enums
    href: Core.Enums.html
  spec.vb:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Enums
    name: Enums
    href: Core.Enums.html
- uid: Core.Interfaces.IStoredProgram.ResetProgram*
  commentId: Overload:Core.Interfaces.IStoredProgram.ResetProgram
  href: Core.Interfaces.IStoredProgram.html#Core_Interfaces_IStoredProgram_ResetProgram
  name: ResetProgram
  nameWithType: IStoredProgram.ResetProgram
  fullName: Core.Interfaces.IStoredProgram.ResetProgram
