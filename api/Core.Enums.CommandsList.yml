### YamlMime:ManagedReference
items:
- uid: Core.Enums.CommandsList
  commentId: T:Core.Enums.CommandsList
  id: CommandsList
  parent: Core.Enums
  children:
  - Core.Enums.CommandsList.#ctor(Core.Canvas)
  - Core.Enums.CommandsList.AddCommand(Core.Interfaces.ICommand)
  - Core.Enums.CommandsList.commands
  - Core.Enums.CommandsList.commandsRegex
  - Core.Enums.CommandsList.getCommandsRegex
  langs:
  - csharp
  - vb
  name: CommandsList
  nameWithType: CommandsList
  fullName: Core.Enums.CommandsList
  type: Class
  source:
    remote:
      path: BOOSE-Application/Core/Enums/CommandsList.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: CommandsList
    path: ../BOOSE-Application/Core/Enums/CommandsList.cs
    startLine: 5
  assemblies:
  - Core
  namespace: Core.Enums
  syntax:
    content: public class CommandsList
    content.vb: Public Class CommandsList
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Core.Enums.CommandsList.commandsRegex
  commentId: P:Core.Enums.CommandsList.commandsRegex
  id: commandsRegex
  parent: Core.Enums.CommandsList
  langs:
  - csharp
  - vb
  name: commandsRegex
  nameWithType: CommandsList.commandsRegex
  fullName: Core.Enums.CommandsList.commandsRegex
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Enums/CommandsList.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: commandsRegex
    path: ../BOOSE-Application/Core/Enums/CommandsList.cs
    startLine: 8
  assemblies:
  - Core
  namespace: Core.Enums
  syntax:
    content: public string commandsRegex { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property commandsRegex As String
  overload: Core.Enums.CommandsList.commandsRegex*
- uid: Core.Enums.CommandsList.commands
  commentId: F:Core.Enums.CommandsList.commands
  id: commands
  parent: Core.Enums.CommandsList
  langs:
  - csharp
  - vb
  name: commands
  nameWithType: CommandsList.commands
  fullName: Core.Enums.CommandsList.commands
  type: Field
  source:
    remote:
      path: BOOSE-Application/Core/Enums/CommandsList.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: commands
    path: ../BOOSE-Application/Core/Enums/CommandsList.cs
    startLine: 9
  assemblies:
  - Core
  namespace: Core.Enums
  syntax:
    content: public Dictionary<string, ICommand> commands
    return:
      type: System.Collections.Generic.Dictionary{System.String,Core.Interfaces.ICommand}
    content.vb: Public commands As Dictionary(Of String, ICommand)
- uid: Core.Enums.CommandsList.#ctor(Core.Canvas)
  commentId: M:Core.Enums.CommandsList.#ctor(Core.Canvas)
  id: '#ctor(Core.Canvas)'
  parent: Core.Enums.CommandsList
  langs:
  - csharp
  - vb
  name: CommandsList(Canvas)
  nameWithType: CommandsList.CommandsList(Canvas)
  fullName: Core.Enums.CommandsList.CommandsList(Core.Canvas)
  type: Constructor
  source:
    remote:
      path: BOOSE-Application/Core/Enums/CommandsList.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: .ctor
    path: ../BOOSE-Application/Core/Enums/CommandsList.cs
    startLine: 11
  assemblies:
  - Core
  namespace: Core.Enums
  syntax:
    content: public CommandsList(Canvas canvas)
    parameters:
    - id: canvas
      type: Core.Canvas
    content.vb: Public Sub New(canvas As Canvas)
  overload: Core.Enums.CommandsList.#ctor*
  nameWithType.vb: CommandsList.New(Canvas)
  fullName.vb: Core.Enums.CommandsList.New(Core.Canvas)
  name.vb: New(Canvas)
- uid: Core.Enums.CommandsList.AddCommand(Core.Interfaces.ICommand)
  commentId: M:Core.Enums.CommandsList.AddCommand(Core.Interfaces.ICommand)
  id: AddCommand(Core.Interfaces.ICommand)
  parent: Core.Enums.CommandsList
  langs:
  - csharp
  - vb
  name: AddCommand(ICommand)
  nameWithType: CommandsList.AddCommand(ICommand)
  fullName: Core.Enums.CommandsList.AddCommand(Core.Interfaces.ICommand)
  type: Method
  source:
    remote:
      path: BOOSE-Application/Core/Enums/CommandsList.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: AddCommand
    path: ../BOOSE-Application/Core/Enums/CommandsList.cs
    startLine: 30
  assemblies:
  - Core
  namespace: Core.Enums
  syntax:
    content: public void AddCommand(ICommand command)
    parameters:
    - id: command
      type: Core.Interfaces.ICommand
    content.vb: Public Sub AddCommand(command As ICommand)
  overload: Core.Enums.CommandsList.AddCommand*
- uid: Core.Enums.CommandsList.getCommandsRegex
  commentId: M:Core.Enums.CommandsList.getCommandsRegex
  id: getCommandsRegex
  parent: Core.Enums.CommandsList
  langs:
  - csharp
  - vb
  name: getCommandsRegex()
  nameWithType: CommandsList.getCommandsRegex()
  fullName: Core.Enums.CommandsList.getCommandsRegex()
  type: Method
  source:
    remote:
      path: BOOSE-Application/Core/Enums/CommandsList.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: getCommandsRegex
    path: ../BOOSE-Application/Core/Enums/CommandsList.cs
    startLine: 35
  assemblies:
  - Core
  namespace: Core.Enums
  syntax:
    content: public string getCommandsRegex()
    return:
      type: System.String
    content.vb: Public Function getCommandsRegex() As String
  overload: Core.Enums.CommandsList.getCommandsRegex*
references:
- uid: Core.Enums
  commentId: N:Core.Enums
  href: Core.html
  name: Core.Enums
  nameWithType: Core.Enums
  fullName: Core.Enums
  spec.csharp:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Enums
    name: Enums
    href: Core.Enums.html
  spec.vb:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Enums
    name: Enums
    href: Core.Enums.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Core.Enums.CommandsList.commandsRegex*
  commentId: Overload:Core.Enums.CommandsList.commandsRegex
  href: Core.Enums.CommandsList.html#Core_Enums_CommandsList_commandsRegex
  name: commandsRegex
  nameWithType: CommandsList.commandsRegex
  fullName: Core.Enums.CommandsList.commandsRegex
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.Dictionary{System.String,Core.Interfaces.ICommand}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Core.Interfaces.ICommand}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, ICommand>
  nameWithType: Dictionary<string, ICommand>
  fullName: System.Collections.Generic.Dictionary<string, Core.Interfaces.ICommand>
  nameWithType.vb: Dictionary(Of String, ICommand)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Core.Interfaces.ICommand)
  name.vb: Dictionary(Of String, ICommand)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Core.Interfaces.ICommand
    name: ICommand
    href: Core.Interfaces.ICommand.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Core.Interfaces.ICommand
    name: ICommand
    href: Core.Interfaces.ICommand.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Core.Enums.CommandsList.#ctor*
  commentId: Overload:Core.Enums.CommandsList.#ctor
  href: Core.Enums.CommandsList.html#Core_Enums_CommandsList__ctor_Core_Canvas_
  name: CommandsList
  nameWithType: CommandsList.CommandsList
  fullName: Core.Enums.CommandsList.CommandsList
  nameWithType.vb: CommandsList.New
  fullName.vb: Core.Enums.CommandsList.New
  name.vb: New
- uid: Core.Canvas
  commentId: T:Core.Canvas
  parent: Core
  href: Core.Canvas.html
  name: Canvas
  nameWithType: Canvas
  fullName: Core.Canvas
- uid: Core
  commentId: N:Core
  href: Core.html
  name: Core
  nameWithType: Core
  fullName: Core
- uid: Core.Enums.CommandsList.AddCommand*
  commentId: Overload:Core.Enums.CommandsList.AddCommand
  href: Core.Enums.CommandsList.html#Core_Enums_CommandsList_AddCommand_Core_Interfaces_ICommand_
  name: AddCommand
  nameWithType: CommandsList.AddCommand
  fullName: Core.Enums.CommandsList.AddCommand
- uid: Core.Interfaces.ICommand
  commentId: T:Core.Interfaces.ICommand
  parent: Core.Interfaces
  href: Core.Interfaces.ICommand.html
  name: ICommand
  nameWithType: ICommand
  fullName: Core.Interfaces.ICommand
- uid: Core.Interfaces
  commentId: N:Core.Interfaces
  href: Core.html
  name: Core.Interfaces
  nameWithType: Core.Interfaces
  fullName: Core.Interfaces
  spec.csharp:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Interfaces
    name: Interfaces
    href: Core.Interfaces.html
  spec.vb:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Interfaces
    name: Interfaces
    href: Core.Interfaces.html
- uid: Core.Enums.CommandsList.getCommandsRegex*
  commentId: Overload:Core.Enums.CommandsList.getCommandsRegex
  href: Core.Enums.CommandsList.html#Core_Enums_CommandsList_getCommandsRegex
  name: getCommandsRegex
  nameWithType: CommandsList.getCommandsRegex
  fullName: Core.Enums.CommandsList.getCommandsRegex
