### YamlMime:ManagedReference
items:
- uid: Core.Evaluators.ExpressionEvaluator
  commentId: T:Core.Evaluators.ExpressionEvaluator
  id: ExpressionEvaluator
  parent: Core.Evaluators
  children:
  - Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List{Core.Token},System.Int32@)
  - Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List{Core.Token},System.Int32@,System.Collections.Generic.Dictionary{System.String,Core.Evaluators.Variable})
  langs:
  - csharp
  - vb
  name: ExpressionEvaluator
  nameWithType: ExpressionEvaluator
  fullName: Core.Evaluators.ExpressionEvaluator
  type: Class
  source:
    remote:
      path: BOOSE-Application/Core/Evaluators/ExpressionEvaluator.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: ExpressionEvaluator
    path: ../BOOSE-Application/Core/Evaluators/ExpressionEvaluator.cs
    startLine: 13
  assemblies:
  - Core
  namespace: Core.Evaluators
  summary: Evaluator for expressions
  example: []
  syntax:
    content: public class ExpressionEvaluator
    content.vb: Public Class ExpressionEvaluator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List{Core.Token},System.Int32@,System.Collections.Generic.Dictionary{System.String,Core.Evaluators.Variable})
  commentId: M:Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List{Core.Token},System.Int32@,System.Collections.Generic.Dictionary{System.String,Core.Evaluators.Variable})
  id: EvaluateExpression(System.Collections.Generic.List{Core.Token},System.Int32@,System.Collections.Generic.Dictionary{System.String,Core.Evaluators.Variable})
  parent: Core.Evaluators.ExpressionEvaluator
  langs:
  - csharp
  - vb
  name: EvaluateExpression(List<Token>, ref int, Dictionary<string, Variable>)
  nameWithType: ExpressionEvaluator.EvaluateExpression(List<Token>, ref int, Dictionary<string, Variable>)
  fullName: Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List<Core.Token>, ref int, System.Collections.Generic.Dictionary<string, Core.Evaluators.Variable>)
  type: Method
  source:
    remote:
      path: BOOSE-Application/Core/Evaluators/ExpressionEvaluator.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: EvaluateExpression
    path: ../BOOSE-Application/Core/Evaluators/ExpressionEvaluator.cs
    startLine: 28
  assemblies:
  - Core
  namespace: Core.Evaluators
  summary: >-
    A polyorphic implementation of expression evaluation hat allows for a variable list to be passed

    this enables variable resolution for previously assigned variables
  example: []
  syntax:
    content: public double EvaluateExpression(List<Token> tokens, ref int index, Dictionary<string, Variable> variables)
    parameters:
    - id: tokens
      type: System.Collections.Generic.List{Core.Token}
      description: Expession tokens to be evaluated
    - id: index
      type: System.Int32
      description: Current index within the list of tokens, as a reference so they aren't double parsed elsewhere
    - id: variables
      type: System.Collections.Generic.Dictionary{System.String,Core.Evaluators.Variable}
      description: A list of previously assigned variables
    return:
      type: System.Double
      description: Float result of the evaluation
    content.vb: Public Function EvaluateExpression(tokens As List(Of Token), index As Integer, variables As Dictionary(Of String, Variable)) As Double
  overload: Core.Evaluators.ExpressionEvaluator.EvaluateExpression*
  nameWithType.vb: ExpressionEvaluator.EvaluateExpression(List(Of Token), Integer, Dictionary(Of String, Variable))
  fullName.vb: Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List(Of Core.Token), Integer, System.Collections.Generic.Dictionary(Of String, Core.Evaluators.Variable))
  name.vb: EvaluateExpression(List(Of Token), Integer, Dictionary(Of String, Variable))
- uid: Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List{Core.Token},System.Int32@)
  commentId: M:Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List{Core.Token},System.Int32@)
  id: EvaluateExpression(System.Collections.Generic.List{Core.Token},System.Int32@)
  parent: Core.Evaluators.ExpressionEvaluator
  langs:
  - csharp
  - vb
  name: EvaluateExpression(List<Token>, ref int)
  nameWithType: ExpressionEvaluator.EvaluateExpression(List<Token>, ref int)
  fullName: Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List<Core.Token>, ref int)
  type: Method
  source:
    remote:
      path: BOOSE-Application/Core/Evaluators/ExpressionEvaluator.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: EvaluateExpression
    path: ../BOOSE-Application/Core/Evaluators/ExpressionEvaluator.cs
    startLine: 40
  assemblies:
  - Core
  namespace: Core.Evaluators
  summary: An implementation of expression evaluation without memory of previously assigned variables
  example: []
  syntax:
    content: public double EvaluateExpression(List<Token> tokens, ref int index)
    parameters:
    - id: tokens
      type: System.Collections.Generic.List{Core.Token}
      description: Expession tokens to be evaluated
    - id: index
      type: System.Int32
      description: Current index within the list of tokens, as a reference so they aren't double parsed elsewhere
    return:
      type: System.Double
      description: Float result of the evaluation
    content.vb: Public Function EvaluateExpression(tokens As List(Of Token), index As Integer) As Double
  overload: Core.Evaluators.ExpressionEvaluator.EvaluateExpression*
  nameWithType.vb: ExpressionEvaluator.EvaluateExpression(List(Of Token), Integer)
  fullName.vb: Core.Evaluators.ExpressionEvaluator.EvaluateExpression(System.Collections.Generic.List(Of Core.Token), Integer)
  name.vb: EvaluateExpression(List(Of Token), Integer)
references:
- uid: Core.Evaluators
  commentId: N:Core.Evaluators
  href: Core.html
  name: Core.Evaluators
  nameWithType: Core.Evaluators
  fullName: Core.Evaluators
  spec.csharp:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Evaluators
    name: Evaluators
    href: Core.Evaluators.html
  spec.vb:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Evaluators
    name: Evaluators
    href: Core.Evaluators.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Core.Evaluators.ExpressionEvaluator.EvaluateExpression*
  commentId: Overload:Core.Evaluators.ExpressionEvaluator.EvaluateExpression
  href: Core.Evaluators.ExpressionEvaluator.html#Core_Evaluators_ExpressionEvaluator_EvaluateExpression_System_Collections_Generic_List_Core_Token__System_Int32__System_Collections_Generic_Dictionary_System_String_Core_Evaluators_Variable__
  name: EvaluateExpression
  nameWithType: ExpressionEvaluator.EvaluateExpression
  fullName: Core.Evaluators.ExpressionEvaluator.EvaluateExpression
- uid: System.Collections.Generic.List{Core.Token}
  commentId: T:System.Collections.Generic.List{Core.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Token>
  nameWithType: List<Token>
  fullName: System.Collections.Generic.List<Core.Token>
  nameWithType.vb: List(Of Token)
  fullName.vb: System.Collections.Generic.List(Of Core.Token)
  name.vb: List(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Core.Token
    name: Token
    href: Core.Token.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Core.Token
    name: Token
    href: Core.Token.html
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.Dictionary{System.String,Core.Evaluators.Variable}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Core.Evaluators.Variable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, Variable>
  nameWithType: Dictionary<string, Variable>
  fullName: System.Collections.Generic.Dictionary<string, Core.Evaluators.Variable>
  nameWithType.vb: Dictionary(Of String, Variable)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Core.Evaluators.Variable)
  name.vb: Dictionary(Of String, Variable)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Core.Evaluators.Variable
    name: Variable
    href: Core.Evaluators.Variable.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Core.Evaluators.Variable
    name: Variable
    href: Core.Evaluators.Variable.html
  - name: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
