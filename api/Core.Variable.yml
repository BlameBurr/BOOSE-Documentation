### YamlMime:ManagedReference
items:
- uid: Core.Variable
  commentId: T:Core.Variable
  id: Variable
  parent: Core
  children:
  - Core.Variable.#ctor(System.String,Core.Enums.VariableType)
  - Core.Variable.#ctor(System.String,System.Double)
  - Core.Variable.#ctor(System.String,System.Int32)
  - Core.Variable.#ctor(System.String,System.String)
  - Core.Variable.IntListValue
  - Core.Variable.IntValue
  - Core.Variable.Name
  - Core.Variable.RealListValue
  - Core.Variable.RealValue
  - Core.Variable.StrListValue
  - Core.Variable.StrValue
  - Core.Variable.Type
  langs:
  - csharp
  - vb
  name: Variable
  nameWithType: Variable
  fullName: Core.Variable
  type: Class
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: Variable
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 7
  assemblies:
  - Core
  namespace: Core
  summary: Variable class used to represent a variable when evaluating and executing a stored program
  example: []
  syntax:
    content: public class Variable
    content.vb: Public Class Variable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Core.Variable.Name
  commentId: P:Core.Variable.Name
  id: Name
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Variable.Name
  fullName: Core.Variable.Name
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: Name
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 12
  assemblies:
  - Core
  namespace: Core
  summary: The name of the variable
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Core.Variable.Name*
- uid: Core.Variable.Type
  commentId: P:Core.Variable.Type
  id: Type
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Variable.Type
  fullName: Core.Variable.Type
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: Type
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 16
  assemblies:
  - Core
  namespace: Core
  summary: Type of variable
  example: []
  syntax:
    content: public VariableType Type { get; set; }
    parameters: []
    return:
      type: Core.Enums.VariableType
    content.vb: Public Property Type As VariableType
  overload: Core.Variable.Type*
- uid: Core.Variable.IntValue
  commentId: P:Core.Variable.IntValue
  id: IntValue
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: IntValue
  nameWithType: Variable.IntValue
  fullName: Core.Variable.IntValue
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: IntValue
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 20
  assemblies:
  - Core
  namespace: Core
  summary: Optional integer value for integer type variable
  example: []
  syntax:
    content: public int? IntValue { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property IntValue As Integer?
  overload: Core.Variable.IntValue*
- uid: Core.Variable.RealValue
  commentId: P:Core.Variable.RealValue
  id: RealValue
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: RealValue
  nameWithType: Variable.RealValue
  fullName: Core.Variable.RealValue
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: RealValue
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 24
  assemblies:
  - Core
  namespace: Core
  summary: Optional real value for real type variable
  example: []
  syntax:
    content: public double? RealValue { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property RealValue As Double?
  overload: Core.Variable.RealValue*
- uid: Core.Variable.StrValue
  commentId: P:Core.Variable.StrValue
  id: StrValue
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: StrValue
  nameWithType: Variable.StrValue
  fullName: Core.Variable.StrValue
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: StrValue
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 28
  assemblies:
  - Core
  namespace: Core
  summary: Optional string value for string type variable
  example: []
  syntax:
    content: public string? StrValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StrValue As String
  overload: Core.Variable.StrValue*
- uid: Core.Variable.IntListValue
  commentId: P:Core.Variable.IntListValue
  id: IntListValue
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: IntListValue
  nameWithType: Variable.IntListValue
  fullName: Core.Variable.IntListValue
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: IntListValue
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 32
  assemblies:
  - Core
  namespace: Core
  summary: Optional integer list for integer array variable
  example: []
  syntax:
    content: public int[]? IntListValue { get; set; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public Property IntListValue As Integer()
  overload: Core.Variable.IntListValue*
- uid: Core.Variable.RealListValue
  commentId: P:Core.Variable.RealListValue
  id: RealListValue
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: RealListValue
  nameWithType: Variable.RealListValue
  fullName: Core.Variable.RealListValue
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: RealListValue
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 36
  assemblies:
  - Core
  namespace: Core
  summary: Optional real list for real array variable
  example: []
  syntax:
    content: public double[]? RealListValue { get; set; }
    parameters: []
    return:
      type: System.Double[]
    content.vb: Public Property RealListValue As Double()
  overload: Core.Variable.RealListValue*
- uid: Core.Variable.StrListValue
  commentId: P:Core.Variable.StrListValue
  id: StrListValue
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: StrListValue
  nameWithType: Variable.StrListValue
  fullName: Core.Variable.StrListValue
  type: Property
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: StrListValue
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 40
  assemblies:
  - Core
  namespace: Core
  summary: Optional string list for string array variable
  example: []
  syntax:
    content: public string[]? StrListValue { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property StrListValue As String()
  overload: Core.Variable.StrListValue*
- uid: Core.Variable.#ctor(System.String,Core.Enums.VariableType)
  commentId: M:Core.Variable.#ctor(System.String,Core.Enums.VariableType)
  id: '#ctor(System.String,Core.Enums.VariableType)'
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: Variable(string, VariableType)
  nameWithType: Variable.Variable(string, VariableType)
  fullName: Core.Variable.Variable(string, Core.Enums.VariableType)
  type: Constructor
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: .ctor
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 47
  assemblies:
  - Core
  namespace: Core
  summary: Take a name and type to initiate a variable without assignment
  example: []
  syntax:
    content: public Variable(string name, VariableType type)
    parameters:
    - id: name
      type: System.String
      description: Variable name
    - id: type
      type: Core.Enums.VariableType
      description: Variable type
    content.vb: Public Sub New(name As String, type As VariableType)
  overload: Core.Variable.#ctor*
  nameWithType.vb: Variable.New(String, VariableType)
  fullName.vb: Core.Variable.New(String, Core.Enums.VariableType)
  name.vb: New(String, VariableType)
- uid: Core.Variable.#ctor(System.String,System.String)
  commentId: M:Core.Variable.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: Variable(string, string)
  nameWithType: Variable.Variable(string, string)
  fullName: Core.Variable.Variable(string, string)
  type: Constructor
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: .ctor
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 57
  assemblies:
  - Core
  namespace: Core
  summary: String variable constructor
  example: []
  syntax:
    content: public Variable(string name, string value)
    parameters:
    - id: name
      type: System.String
      description: Variable name
    - id: value
      type: System.String
      description: String Variable Value
    content.vb: Public Sub New(name As String, value As String)
  overload: Core.Variable.#ctor*
  nameWithType.vb: Variable.New(String, String)
  fullName.vb: Core.Variable.New(String, String)
  name.vb: New(String, String)
- uid: Core.Variable.#ctor(System.String,System.Int32)
  commentId: M:Core.Variable.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: Variable(string, int)
  nameWithType: Variable.Variable(string, int)
  fullName: Core.Variable.Variable(string, int)
  type: Constructor
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: .ctor
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 68
  assemblies:
  - Core
  namespace: Core
  summary: Integer variable constructor
  example: []
  syntax:
    content: public Variable(string name, int value)
    parameters:
    - id: name
      type: System.String
      description: Variable name
    - id: value
      type: System.Int32
      description: Integer Variable Value
    content.vb: Public Sub New(name As String, value As Integer)
  overload: Core.Variable.#ctor*
  nameWithType.vb: Variable.New(String, Integer)
  fullName.vb: Core.Variable.New(String, Integer)
  name.vb: New(String, Integer)
- uid: Core.Variable.#ctor(System.String,System.Double)
  commentId: M:Core.Variable.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: Core.Variable
  langs:
  - csharp
  - vb
  name: Variable(string, double)
  nameWithType: Variable.Variable(string, double)
  fullName: Core.Variable.Variable(string, double)
  type: Constructor
  source:
    remote:
      path: BOOSE-Application/Core/Variable.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-boose-assignment-BlameBurr.git
    id: .ctor
    path: ../BOOSE-Application/Core/Variable.cs
    startLine: 79
  assemblies:
  - Core
  namespace: Core
  summary: Real variable constructor
  example: []
  syntax:
    content: public Variable(string name, double value)
    parameters:
    - id: name
      type: System.String
      description: Variable name
    - id: value
      type: System.Double
      description: Real Variable Value
    content.vb: Public Sub New(name As String, value As Double)
  overload: Core.Variable.#ctor*
  nameWithType.vb: Variable.New(String, Double)
  fullName.vb: Core.Variable.New(String, Double)
  name.vb: New(String, Double)
references:
- uid: Core
  commentId: N:Core
  href: Core.html
  name: Core
  nameWithType: Core
  fullName: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Core.Variable.Name*
  commentId: Overload:Core.Variable.Name
  href: Core.Variable.html#Core_Variable_Name
  name: Name
  nameWithType: Variable.Name
  fullName: Core.Variable.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Core.Variable.Type*
  commentId: Overload:Core.Variable.Type
  href: Core.Variable.html#Core_Variable_Type
  name: Type
  nameWithType: Variable.Type
  fullName: Core.Variable.Type
- uid: Core.Enums.VariableType
  commentId: T:Core.Enums.VariableType
  parent: Core.Enums
  href: Core.Enums.VariableType.html
  name: VariableType
  nameWithType: VariableType
  fullName: Core.Enums.VariableType
- uid: Core.Enums
  commentId: N:Core.Enums
  href: Core.html
  name: Core.Enums
  nameWithType: Core.Enums
  fullName: Core.Enums
  spec.csharp:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Enums
    name: Enums
    href: Core.Enums.html
  spec.vb:
  - uid: Core
    name: Core
    href: Core.html
  - name: .
  - uid: Core.Enums
    name: Enums
    href: Core.Enums.html
- uid: Core.Variable.IntValue*
  commentId: Overload:Core.Variable.IntValue
  href: Core.Variable.html#Core_Variable_IntValue
  name: IntValue
  nameWithType: Variable.IntValue
  fullName: Core.Variable.IntValue
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Core.Variable.RealValue*
  commentId: Overload:Core.Variable.RealValue
  href: Core.Variable.html#Core_Variable_RealValue
  name: RealValue
  nameWithType: Variable.RealValue
  fullName: Core.Variable.RealValue
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double?
  nameWithType: double?
  fullName: double?
  nameWithType.vb: Double?
  fullName.vb: Double?
  name.vb: Double?
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
- uid: Core.Variable.StrValue*
  commentId: Overload:Core.Variable.StrValue
  href: Core.Variable.html#Core_Variable_StrValue
  name: StrValue
  nameWithType: Variable.StrValue
  fullName: Core.Variable.StrValue
- uid: Core.Variable.IntListValue*
  commentId: Overload:Core.Variable.IntListValue
  href: Core.Variable.html#Core_Variable_IntListValue
  name: IntListValue
  nameWithType: Variable.IntListValue
  fullName: Core.Variable.IntListValue
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Core.Variable.RealListValue*
  commentId: Overload:Core.Variable.RealListValue
  href: Core.Variable.html#Core_Variable_RealListValue
  name: RealListValue
  nameWithType: Variable.RealListValue
  fullName: Core.Variable.RealListValue
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: Core.Variable.StrListValue*
  commentId: Overload:Core.Variable.StrListValue
  href: Core.Variable.html#Core_Variable_StrListValue
  name: StrListValue
  nameWithType: Variable.StrListValue
  fullName: Core.Variable.StrListValue
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Core.Variable.#ctor*
  commentId: Overload:Core.Variable.#ctor
  href: Core.Variable.html#Core_Variable__ctor_System_String_Core_Enums_VariableType_
  name: Variable
  nameWithType: Variable.Variable
  fullName: Core.Variable.Variable
  nameWithType.vb: Variable.New
  fullName.vb: Core.Variable.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
